{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseResourceName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The base name to use for the resources that will be provisioned."
      }
    },
    "botClientId": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "metadata": {
        "description": "The client ID of the bot Azure AD app, e.g., 123e4567-e89b-12d3-a456-426655440000."
      }
    },
    "botClientSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "The client secret of the bot Azure AD app."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "minLength": 1,
      "maxLength": 36,
      "metadata": {
        "description": "The ID of the tenant to which the app will be deployed."
      }
    },
"botAppInsightsKey": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "The instrumentation key for the app insights created for the bot."
      }
    },
	 "IsGCCHybrid": {
      "type": "bool",
      "defaultValue": "false",
      "metadata": {
        "description": "Deployment tenant is GCC or any other tenant."
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "planSize": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "The size of the hosting plan (small, medium, or large)."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "defaultCulture": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "en-US"
    },
    "supportedCultures": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "en-US"
    },
    "searchServiceSku": {
      "defaultValue": "B (15 indexes)",
      "allowedValues": [
        "F (3 indexes)",
        "B (15 indexes)"
      ],
      "type": "String",
      "metadata": {
        "description": "The pricing tier for the Azure Search service."
      }
    },
    "gitRepoUrl": {
      "type": "string",
      "metadata": {
        "description": "The URL to the GitHub repository to deploy."
      },
      "defaultValue": "https://github.com/OfficeDev/microsoft-teams-apps-workplaceawards.git"
    },
    "gitBranch": {
      "type": "string",
      "metadata": {
        "description": "The branch of the GitHub repository to deploy."
      },
      "defaultValue": "master"
    }
  },
  "variables": {
    "uniqueString": "[uniquestring(subscription().subscriptionId, resourceGroup().id, parameters('baseResourceName'))]",
    "botName": "[parameters('baseResourceName')]",
    "botAppName": "[parameters('baseResourceName')]",
    "botAppDomain": "[concat(variables('botAppName'), '.azurewebsites.us')]",
    "botAppUrl": "[concat('https://', variables('botAppDomain'))]",
    "hostingPlanName": "[parameters('baseResourceName')]",
    "storageAccountName": "[variables('uniqueString')]",
    "azureSearchName": "[concat('search-', variables('uniqueString'))]",
    "azureSearchSkus": {
      "F ": "free",
      "B ": "basic"
    },
    "azureSearchSkuValue": "[variables('azureSearchSkus')[toUpper(substring(parameters('searchServiceSku'), 0, 2))]]",
    "botAppInsightsName": "[parameters('baseResourceName')]",
    "sharedSkus": [
      "Free",
      "Shared"
    ],
    "isSharedPlan": "[contains(variables('sharedSkus'), parameters('sku'))]",
    "skuFamily": "[if(equals(parameters('sku'), 'Shared'), 'D', take(parameters('sku'), 1))]"
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "kind": "Storage",
      "location": "[parameters('location')]",
      "name": "[variables('storageAccountName')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "name": "[variables('hostingPlanName')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "hostingEnvironment": "",
        "numberOfWorkers": 1
      },
      "sku": {
        "name": "[if(variables('isSharedPlan'), concat(variables('skuFamily'),'1'), concat(variables('skuFamily'),parameters('planSize')))]",
        "tier": "[parameters('sku')]",
        "size": "[concat(variables('skuFamily'), parameters('planSize'))]",
        "family": "[variables('skuFamily')]",
        "capacity": 0
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "2016-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Search/searchServices/', variables('azureSearchName'))]"
      ],
      "kind": "app",
      "location": "[parameters('location')]",
      "name": "[variables('botAppName')]",
      "properties": {
        "name": "[variables('botAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "enabled": true,
        "reserved": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "appsettings": [
            {
              "name": "SITE_ROLE",
              "value": "bot"
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Information"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[parameters('botAppInsightsKey')]"
            },
            {
              "name": "ApplicationInsights:LogLevel:Default",
              "value": "Information"
            },
            {
              "name": "ApplicationInsights:LogLevel:Microsoft",
              "value": "Information"
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('botClientId')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('botClientSecret')]"
            },
            {
              "name": "Bot:AppBaseUri",
              "value": "[concat('https://', variables('botAppDomain'))]"
            },
            {
              "name": "Bot:TenantId",
              "value": "[parameters('tenantId')]"
            },
            {
              "name": "Storage:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1,';EndpointSuffix=','core.usgovcloudapi.net')]"
            },
            {
              "name": "i18n:DefaultCulture",
              "value": "[parameters('defaultCulture')]"
            },
            {
              "name": "i18n:SupportedCultures",
              "value": "en-US"
            },
            {
              "name": "Search:SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "Search:SearchServiceAdminApiKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "Search:SearchServiceQueryApiKey",
              "value": "[listQueryKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').value[0].key]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.15.2"
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/"
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]"
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('botClientId')]"
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://', concat(variables('botAppDomain'), concat('/',parameters('botClientId'))))]"
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "https://login.microsoftonline.com/TENANT_ID/v2.0,https://sts.windows.net/TENANT_ID/"
            },
			{
              "name": "DeploymentType:IsGCCHybrid",
              "value": "[parameters('IsGCCHybrid')]"
            }
          ],
          "cors": {
            "supportCredentials": true,
            "allowedOrigins": [
              "[concat('https://', variables('botAppDomain'))]"
            ]
          }
        }
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "condition": "[not(empty(parameters('gitRepoUrl')))]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('botAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('gitRepoUrl')]",
            "branch": "[parameters('gitBranch')]",
            "IsManualIntegration": true
          }
        }
      ],
      "type": "Microsoft.Web/sites"
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2015-08-19",
      "name": "[variables('azureSearchName')]",
      "location": "[parameters('location')]",
      "tags": {
        "isqnamaker": "true"
      },
      "sku": {
        "name": "[toLower(variables('azureSearchSkuValue'))]"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default"
      }
    }
    
  ],
  "outputs": {
    "botId": {
      "type": "String",
      "value": "[parameters('botClientId')]"
    },
    "appDomain": {
      "type": "string",
      "value": "[variables('botAppDomain')]"
    }
  }
}